<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RPG de Piratas - Status do Personagem</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #1a202c; /* Fundo escuro */
            color: #e2e8f0; /* Texto claro */
        }
        .container {
            background-color: #2d3748; /* Fundo do container mais claro */
            border-radius: 15px;
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.5);
        }
        .btn-pirate {
            background-color: #e53e3e; /* Vermelho pirata */
            color: white;
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: bold;
            transition: background-color 0.3s ease;
        }
        .btn-pirate:hover {
            background-color: #c53030;
        }
        .stat-item {
            background-color: #4a5568;
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .stat-name {
            font-weight: bold;
            color: #f6e05e;
        }
        .stat-value {
            color: #cbd5e0;
        }
        .distribute-btn {
            background-color: #4299e1;
            color: white;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 0.9em;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .distribute-btn:hover:not(:disabled) {
            background-color: #3182ce;
        }
        .distribute-btn:disabled {
            background-color: #718096;
            cursor: not-allowed;
            opacity: 0.6;
        }
    </style>
</head>
<body class="flex flex-col items-center justify-center min-h-screen p-4">
    <div class="container w-full max-w-2xl p-8 text-center">
        <h1 class="text-4xl font-bold mb-6 text-yellow-400">Status de <%= character.name %></h1>
        
        <div class="flex flex-col items-center mb-8">
            <p class="text-2xl font-semibold text-green-400">Nível: <span class="text-white" id="character-level"><%= character.level %></span></p>
            <p class="text-lg text-gray-300">Classe: <span class="text-white"><%= character.class %></span></p>
            <p class="text-lg text-blue-300">Pontos de Habilidade Disponíveis: <span class="text-white" id="skill-points"><%= character.skillPoints %></span></p>
        </div>

        <div class="mb-8">
            <h2 class="text-2xl font-bold mb-4 text-blue-300">Atributos</h2>
            <div id="attributes-list" class="text-left">
                <div class="stat-item">
                    <span class="stat-name">Força:</span>
                    <span class="stat-value" id="stat-strength"><%= character.stats.strength %></span>
                    <button class="distribute-btn" data-stat="strength" <%= character.skillPoints <= 0 ? 'disabled' : '' %>>Distribuir (+1)</button>
                </div>
                <div class="stat-item">
                    <span class="stat-name">Defesa:</span>
                    <span class="stat-value" id="stat-defense"><%= character.stats.defense %></span>
                    <button class="distribute-btn" data-stat="defense" <%= character.skillPoints <= 0 ? 'disabled' : '' %>>Distribuir (+1)</button>
                </div>
                <div class="stat-item">
                    <span class="stat-name">Agilidade:</span>
                    <span class="stat-value" id="stat-agility"><%= character.stats.agility %></span>
                    <button class="distribute-btn" data-stat="agility" <%= character.skillPoints <= 0 ? 'disabled' : '' %>>Distribuir (+1)</button>
                </div>
                <div class="stat-item">
                    <span class="stat-name">Inteligência:</span>
                    <span class="stat-value" id="stat-intelligence"><%= character.stats.intelligence %></span>
                    <button class="distribute-btn" data-stat="intelligence" <%= character.skillPoints <= 0 ? 'disabled' : '' %>>Distribuir (+1)</button>
                </div>
            </div>
        </div>

        <div class="mt-8">
            <button id="return-home-from-status-btn" class="btn-pirate w-full">Voltar para Casa</button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const skillPointsEl = document.getElementById('skill-points');
            const distributeButtons = document.querySelectorAll('.distribute-btn');
            const returnHomeBtn = document.getElementById('return-home-from-status-btn');

            let currentSkillPoints = parseInt(skillPointsEl.textContent);

            distributeButtons.forEach(button => {
                button.addEventListener('click', async (e) => {
                    const stat = e.target.dataset.stat;
                    if (currentSkillPoints <= 0) {
                        alert('Você não tem pontos de habilidade para distribuir!');
                        return;
                    }

                    try {
                        const response = await fetch('/status/distribute-points', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ stat, points: 1 })
                        });
                        const data = await response.json();

                        if (data.success) {
                            alert(data.message);
                            // Atualiza os valores na UI
                            document.getElementById(`stat-${stat}`).textContent = data.character.stats[stat];
                            skillPointsEl.textContent = data.character.skillPoints;
                            currentSkillPoints = data.character.skillPoints;

                            // Desabilita botões se não houver mais pontos
                            if (currentSkillPoints <= 0) {
                                distributeButtons.forEach(btn => btn.disabled = true);
                            }
                        } else {
                            alert(data.message);
                        }
                    } catch (error) {
                        console.error('Erro ao distribuir pontos:', error);
                        alert('Erro ao tentar distribuir pontos de habilidade.');
                    }
                });
            });

            returnHomeBtn.addEventListener('click', () => {
                window.location.href = '/home'; // Redireciona para a página inicial
            });
        });
    </script>
</body>
</html>
